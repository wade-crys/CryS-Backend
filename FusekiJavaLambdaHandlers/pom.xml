<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>GetCoinsFuseki</artifactId>
    <version>1.0-SNAPSHOT</version>
    <dependencies>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-fuseki-core</artifactId>
            <version>3.13.1</version>
            <!-- No specific logging - leave to the application -->
            <exclusions>

                <!-- No Apache Shiro - exclude to make sure it does not get accidently picked up -->
                <exclusion>
                    <groupId>org.apache.shiro</groupId>
                    <artifactId>shiro-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.shiro</groupId>
                    <artifactId>shiro-web</artifactId>
                </exclusion>

                <!-- Parts of Jena not needed but picked up via jena-fuseki-core.
                     The application can put back any of these if it wants to use
                     them, e.g. a text-indexed dataset, providing the version is compatible.
                  -->

                <exclusion>
                    <groupId>org.apache.jena</groupId>
                    <artifactId>jena-cmds</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.jena</groupId>
                    <artifactId>jena-text</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.jena</groupId>
                    <artifactId>jena-spatial</artifactId>
                </exclusion>
                <!-- Jena use SLF4J as its API. Exclude any logging bindings picked up via Jena.
                  For example, jena-fuseki-core has logging output and so some logging provider.
                  For embedded use, it is the enclosing application that chooses the kind of
                  logging system.
                -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-jdk14</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>